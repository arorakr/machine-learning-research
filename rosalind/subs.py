# https://rosalind.info/problems/subs

def subs(s, t):
  indices = []

  for index in range(0, len(s) - len(t)):
    if s[index:index+len(t)] == t:
      indices.append(str(index + 1))

  return ' '.join(indices)

def subs_list_comprehension(s, t):
  return ' '.join(str(index + 1)
                  for index in range(0, len(s) - len(t))
                  if s[index:index+len(t)] == t)

print(subs('GATATATGCATATACTT', 'ATAT'))
print(subs('CCGCTACTACGCTACTGTGATTGCATACATCTCGGACGCTACTACGCGCTACTCGCTACTCGCTACTGCCGCTACTGTACGCTACTTGCGCTACTTTCGCTACTCGCTACTCCGCTACTCGCTACTACTCTTACGCGCTACTCCGCTACTACGCTACTGTATATAAACGCTACTCGCTACTGCCCACGCTACTCGCTACTCGCTACTTGTTCGCTACTTAGGGCGCTACTCAGGGCGCTACTTCTCACGCTACTTCGCGACGCTACTAACGCTACTCGCTACTCGCTACTGCCGGCAGCCGCTACTCCATCGCGCTACTCGCTACTCGGTTAACACGCTACTGCGGCGCGCTACTTTATTCGCTACTTATCGCTACTGATACGCTACTTTGGCCGCTACTCGGTGATCCCGCTACTTCCGCTACTAGGCGCTACTTCGCTACTTTCGACGCTACTTCTTCGCTACTTGCCGCTACTCACGCTACTCGCTACTGCGCTACTGTGCGCTACTCGCTACTATCGCTACTCGCTACTCGCTACTCCGCTACTTCGCTACTCCGCTACTCGCTACTGCGCTACTCGCTACTTCCCAATAGACGCTACTCGCTACTTCGCTACTTCGCTACTGACCCGCTACTCCCGCTACTCCTGCCCCGTGGCCCGTCGCTACTAACGCTACTCGCTACTTGGCGCTACTAGTATCGCTACTCCGCTACTCCTACATGCGCTACTCGCTACTCGGACGCGCTACTCGCTACTGTGACGCTACTCGCTACTTTGGGTGCGCTACTCGCTACTGCGCTACTCGCTACTCCGACGCTACTGCGCTACTCGCTACTGTCGCTACTTA', 'CGCTACTCG'))

print(subs_list_comprehension('GATATATGCATATACTT', 'ATAT'))
print(subs_list_comprehension('CCGCTACTACGCTACTGTGATTGCATACATCTCGGACGCTACTACGCGCTACTCGCTACTCGCTACTGCCGCTACTGTACGCTACTTGCGCTACTTTCGCTACTCGCTACTCCGCTACTCGCTACTACTCTTACGCGCTACTCCGCTACTACGCTACTGTATATAAACGCTACTCGCTACTGCCCACGCTACTCGCTACTCGCTACTTGTTCGCTACTTAGGGCGCTACTCAGGGCGCTACTTCTCACGCTACTTCGCGACGCTACTAACGCTACTCGCTACTCGCTACTGCCGGCAGCCGCTACTCCATCGCGCTACTCGCTACTCGGTTAACACGCTACTGCGGCGCGCTACTTTATTCGCTACTTATCGCTACTGATACGCTACTTTGGCCGCTACTCGGTGATCCCGCTACTTCCGCTACTAGGCGCTACTTCGCTACTTTCGACGCTACTTCTTCGCTACTTGCCGCTACTCACGCTACTCGCTACTGCGCTACTGTGCGCTACTCGCTACTATCGCTACTCGCTACTCGCTACTCCGCTACTTCGCTACTCCGCTACTCGCTACTGCGCTACTCGCTACTTCCCAATAGACGCTACTCGCTACTTCGCTACTTCGCTACTGACCCGCTACTCCCGCTACTCCTGCCCCGTGGCCCGTCGCTACTAACGCTACTCGCTACTTGGCGCTACTAGTATCGCTACTCCGCTACTCCTACATGCGCTACTCGCTACTCGGACGCGCTACTCGCTACTGTGACGCTACTCGCTACTTTGGGTGCGCTACTCGCTACTGCGCTACTCGCTACTCCGACGCTACTGCGCTACTCGCTACTGTCGCTACTTA', 'CGCTACTCG'))